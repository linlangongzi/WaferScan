%% 画出结构图
clear;
clc;
joint_x = 100;
joint_y = 200;
joint_z = 100;
joint_b = -30;
joint_a = 30;
%五轴系统的配置参数
%以下两个参数导致了A轴对B轴的偏移
offsetBAZ = 0;    %B轴与A轴在z方向的距离
offsetBAX = 59;     %B轴与A轴在x方向的距离
%以下四个参数导致了刀具末端的偏移
offsetAToolZ = 101;  %A轴与工具在z方向的距离
offsetAToolY = 0;  %A轴与工具在y方向的距离
water_depth = 0;
lengthOfTool = 0 + water_depth;  %工具长度,即探头安装后增加的长度，同时把水距也直接设置在工具长度中
%五轴系统各关节的变换矩阵
Tx = [1,   0,  0,  joint_x ;...
      0,   1,  0,  0	;...
      0,   0,  1,  0 ;...
      0,   0,  0,  1       ];        %B轴轴心与世界坐标系原点之间的平移变换矩阵
Ty =  [1,   0,  0,  0 ;...
      0,   1,  0,  joint_y	;...
      0,   0,  1,  0 ;...
      0,   0,  0,  1       ]; 
Tz =  [1,   0,  0,  0 ;...
      0,   1,  0,  0	;...
      0,   0,  1,  -joint_z ;...
      0,   0,  0,  1       ]; 
Rb = [cosd(joint_b),    0,  sind(joint_b),  0;...
      0,                1,  0,              0;...
      -sind(joint_b),   0,  cosd(joint_b),  0;...
      0,                0,  0,              1   ];%B轴的旋转变换矩阵
Tba = [1,   0,  0,  -offsetBAX;...
       0,   1,  0,  0         ;...
       0,   0,  1,  offsetBAZ ;...
       0,   0,  0,  1          ];                 %AB轴原点之间的平移变换矩阵
Ra = [1,    0,              0,              0;...
      0,    cosd(joint_a),  -sind(joint_a), 0;...
      0,    sind(joint_a), cosd(joint_a),   0;...
      0,    0,              0,              1];     %A轴的旋转变换矩阵

TCP_a = [1,0,0,0                           ;...
         0,1,0,0              ;...
         0,0,1,-offsetAToolZ ;...
         0,0,0,1                           ];  %TCP在A轴坐标系下的坐标
NT = [0;...
      0;...
      1;...
      1];%工具在A轴坐标系下的指向、法矢
T = cat(3, Tx, Ty, Tz, Rb, Ra, Tba, TCP_a);
origin = [0; 0; 0; 1];
points = origin;
Ti = eye(4);
for index = 1: size(T, 3)
    Ti = Ti * T(:, :, index);
    point = Ti * origin;
    points = [points, point];
end
point
plot3(points(1, :), points(2, :), points(3, :), 'o-');
axis equal
%%
%测试正解逆解
[x,y,z,nx,ny,nz] = ForwardSolver( joint_x,joint_y,joint_z,joint_b,joint_a );
tcp = [x,y,z,nx,ny,nz]'

[jx,jy,jz,jb,ja] = InverseSolver( x,y,z,nx,ny,nz );
joint = [jx,jy,jz,jb,ja]'


