function [x,y,z] = ForwardSolver2( joint_x,joint_y,joint_z,joint_b,joint_a )
%做正解，用来做碰撞检测，取探头长度为40，即检测反射镜一半长度处的x的值，以防其撞到盘体
%世界坐标系的原点：当轴坐标都为0时，原点对应当前位置下的B轴的轴心
%   input:
%       joint_x,joint_y,joint_z,joint_b,joint_a分别为对应的坐标（毫米）及角度（度）
%   output:
%       x,y,z即TCP在世界坐标系下的位置
%       nx,ny,nz为声束的指向，与曲面的法向量相反
lengthOfAB = 60;
lengthOfA = 60;
lengthOfAssamble = 40;%88.76;%45.83-0.95;
%平移矩阵，处理x,y,z三个直线轴的平移
Txyz = [1,0,0,joint_x;...
     0,1,0,joint_y;...
     0,0,1,joint_z;...
     0,0,0,1];
 %处理B轴旋转。B轴原点为B轴轴线与其旋转平面的交点，即认为是(jx,jy,jz)
 Rb = [cosd(joint_b),   0,  sind(joint_b), 0;...
       0,               1,  0,              0;...
       -sind(joint_b),   0,  cosd(joint_b),  0;...
       0,               0,  0,              1];
 %处理A轴与B轴的原点偏移。A轴原点为A轴轴线与其旋转平面的交点
 Tab = [1,0,0,-lengthOfAB;...
        0,1,0,0;...
        0,0,1,0;...
        0,0,0,1];
 %处理A轴的旋转
 Ra = [1,   0,              0,              0;...
       0,   cosd(joint_a),  -sind(joint_a),  0;...
       0,   sind(joint_a),  cosd(joint_a),  0;...
       0,   0,              0,              1];
 %处理直探头与A轴的原点偏移
 Ttool_1 = [1,0,0,0;...
          0,1,0,0;...
          0,0,1,-lengthOfA - lengthOfAssamble;...
          0,0,0,1];
  Ori = [0;...
        0;...
        0;...
        1];
 Dir = [0;0;-1;0];       %声束初始方向
 T = Txyz * Rb * Tab * Ra * Ttool_1;
 TCP = T*Ori;
 x = TCP(1);
 y = TCP(2);
 z = TCP(3);
end
