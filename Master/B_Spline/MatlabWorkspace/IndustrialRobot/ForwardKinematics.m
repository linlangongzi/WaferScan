function [ x, y, z, a, b, c] = ForwardKinematics( j1, j2, j3, j4, j5, j6 )
% 给定机器人六个轴参数，计算TCP的位姿
%% 世界坐标系
% 世界坐标系原点为关节0转轴与安装座平面的交点

%% 机器人原点定义
% 关节旋转角度符合右手系
% 假设机器人处于0位置时，在YZ平面内，大臂最竖直，小臂水平，末端水平
% 轴1沿z轴，轴2沿x轴，轴3沿x轴，轴4沿y轴，轴5沿x轴，轴6沿y轴
% 轴1原点：与世界坐标系原点重合
% 轴2原点：轴2转轴与轴1坐标系yz平面的交点；轴2x轴为其转轴；轴2与轴3转轴构成轴2坐标系的xz平面
% 轴3原点：轴3转轴与轴2坐标系yz平面的交点；轴3x轴为其转轴

%% 尺寸偏移参数设置
% 关节1与关节2的偏移,关节2的原点在关节1坐标系下的位置
L21x = 0;
L21y = 29.5;
L21z = 45.5;
T21 = [1, 0, 0, L21x;...
       0, 1, 0, L21y;...
       0, 0, 1, L21z;...
       0, 0, 0, 1];
% 关节2与关节3的偏移,关节3的原点在关节2坐标系下的位置
L32x = 0;
L32y = 0;
L32z = 120;
T32 = [1, 0, 0, L32x;...
       0, 1, 0, L32y;...
       0, 0, 1, L32z;...
       0, 0, 0, 1];
% 关节3与关节4的偏移,关节4的原点在关节3坐标系下的位置
L43x = 0;
L43y = 0;
L43z = 20;
T43 = [1, 0, 0, L43x;...
       0, 1, 0, L43y;...
       0, 0, 1, L43z;...
       0, 0, 0, 1];
% 关节5与关节4的偏移,关节5的原点在关节4坐标系下的位置
L54x = 0;
L54y = 125;
L54z = 0;
T54 = [1, 0, 0, L54x;...
       0, 1, 0, L54y;...
       0, 0, 1, L54z;...
       0, 0, 0, 1]; 
% 关节6与关节5的偏移,关节6的原点在关节5坐标系下的位置
L65x = 0;
L65y = 30;
L65z = 0;
T65 = [1, 0, 0, L65x;...
       0, 1, 0, L65y;...
       0, 0, 1, L65z;...
       0, 0, 0, 1]; 
% TCP在关节6坐标系下的位置
LTCPx = 0;
LTCPy = 1;
LTCPz = 0;
TCP = [LTCPx;...
       LTCPy;...
       LTCPz;...
       1];
%% 关节旋转变换矩阵
%关节1对世界坐标系的变换，已知关节1坐标系下的点P1，则世界坐标系点P0 = R10 * P1；绕Z轴
R10 = [cosd(j1),    -sind(j1),  0,  0;...
       sind(j1),    cosd(j1),   0,  0;...
       0,           0,          1,  0;...
       0,           0,          0,  1];
%关节2对关节1坐标系的变换，已知关节2坐标系下的点P2，刚关节1坐标系点P1 = T21 * R21 * P2；绕x轴
R21 = [1,   0,          0,          0;...
       0,   cosd(j2),   -sind(j2),  0;...
       0,   sind(j2),   cosd(j2),   0;...
       0,   0,          0,          1];
%关节3对关节2坐标系的变换，已知关节3坐标系下的点P3，刚关节2坐标系点P2 = T32 * R32 * P3；绕x轴
R32 = [1,   0,          0,          0;...
       0,   cosd(j3),   -sind(j3),  0;...
       0,   sind(j3),   cosd(j3),   0;...
       0,   0,          0,          1];
%关节4对关节3坐标系的变换，已知关节4坐标系下的点P4，刚关节3坐标系点P3 = T43 * R43 * P4；绕y轴
R43 = [cosd(j4),    0,   sind(j4),  0;...
       0,           1,          0,  0;...
       -sind(j4),   0,   cosd(j4),  0;...
       0,           0,          0,  1];
%关节5对关节4坐标系的变换，已知关节5坐标系下的点P5，刚关节4坐标系点P4 = T54 * R54 * P5；绕x轴
R54 = [1,   0,          0,          0;...
       0,   cosd(j5),   -sind(j5),  0;...
       0,   sind(j5),   cosd(j5),   0;...
       0,   0,          0,          1];
%关节6对关节5坐标系的变换，已知关节6坐标系下的点TCP，刚关节5坐标系点P5 = T65 * R65 * TCP；绕y轴
R65 = [cosd(j6),    0,   sind(j6),  0;...
       0,           1,          0,  0;...
       -sind(j6),   0,   cosd(j6),  0;...
       0,           0,          0,  1];

%% 机器人正解
T1 = R10 * T21 * R21 * T32 * R32 * T43 * R43 * T54 * R54 * T65 * R65;
TCP0 =  T1 * TCP;   %计算TCP点坐标，即位置
T2 = R10 * R21 * R32 * R43 * R54 * R65
TCP1 = T2 * TCP;     %计算TCP点指向，即姿态
x = TCP0(1);
y = TCP0(2);
z = TCP0(3);
b = acos(TCP1(3)) / pi * 180;
c = j6;
r = sqrt(TCP1(1)^2 + TCP1(2)^2);    %TCP1在xy0平面内投影长度
if TCP1(2) >= 0
    a = acos(TCP1(1) / r) / pi * 180;
elseif TCP1(2) < 0
    a = -acos(TCP1(1) / r) / pi * 180;
end
%% 画出个关键点位置
% ori = [0;0;0;1];%各坐标原点
% T = cat(3, R10, T21, R21, T32, R32, T43, R43, T54, R54, T65, R65);
% Ti = eye(4);
% points = ori;
% for index = 1: size(T,3)
%     Ti = Ti * T(:, :, index);
%     point = Ti * ori;
%     points = [points,point];
% end
% points = [points,TCP0];
% plot3(points(1,:), points(2,:), points(3,:), 'o-', 'Color', 'r');
% xlabel('x axis');
% ylabel('y axis');
% zlabel('z axis');
% axis equal

end

